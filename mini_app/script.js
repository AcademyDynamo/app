const API_URL = "http://<IP_–∞–¥—Ä–µ—Å_–±–æ—Ç–∞>:8000/get_deadline";  // üîπ –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π IP –±–æ—Ç–∞

const substitutes = ["–ò–≥—Ä–æ–∫ 1", "–ò–≥—Ä–æ–∫ 2", "–ò–≥—Ä–æ–∫ 3", "–ò–≥—Ä–æ–∫ 4"]; // üîπ –°–ø–∏—Å–æ–∫ –∑–∞–º–µ–Ω

async function fetchDeadline() {
    try {
        let response = await fetch(API_URL);
        let data = await response.json();
        let deadlineTimestamp = data.deadline;
        let deadlineDate = new Date(deadlineTimestamp * 1000);

        document.getElementById("deadline-text").innerText = 
            `–î–µ–¥–ª–∞–π–Ω: ${deadlineDate.toLocaleString()}`;

        if (Date.now() / 1000 > deadlineTimestamp) {
            document.getElementById("edit-team").style.display = "none";
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–¥–ª–∞–π–Ω–∞:", error);
    }
}

// üîπ –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–º–µ–Ω
function toggleSubstitutes() {
    let container = document.getElementById("substitutes-container");
    let list = document.getElementById("substitutes-list");

    if (container.classList.contains("show")) {
        container.classList.remove("show");
    } else {
        list.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
        substitutes.forEach(player => {
            let li = document.createElement("li");
            li.innerText = player;
            li.onclick = () => replacePlayer(player);
            list.appendChild(li);
        });
        container.classList.add("show");
    }
}

// üîπ –ó–∞–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–∞
function replacePlayer(player) {
    alert(`${player} —Ç–µ–ø–µ—Ä—å –≤ –≤–∞—à–µ–º —Å–æ—Å—Ç–∞–≤–µ!`);
}

fetchDeadline();
